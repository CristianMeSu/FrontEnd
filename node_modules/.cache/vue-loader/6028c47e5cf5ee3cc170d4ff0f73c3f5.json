{"remainingRequest":"D:\\Xampp\\htdocs\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Xampp\\htdocs\\FrontEnd\\src\\views\\construccion\\projects\\index.vue?vue&type=style&index=0&id=3bcf4e00&scoped=true&lang=css&","dependencies":[{"path":"D:\\Xampp\\htdocs\\FrontEnd\\src\\views\\construccion\\projects\\index.vue","mtime":1637020374923},{"path":"D:\\Xampp\\htdocs\\FrontEnd\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636401895556},{"path":"D:\\Xampp\\htdocs\\FrontEnd\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636401901227},{"path":"D:\\Xampp\\htdocs\\FrontEnd\\node_modules\\postcss-loader\\src\\index.js","mtime":1636401897499},{"path":"D:\\Xampp\\htdocs\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636401893889},{"path":"D:\\Xampp\\htdocs\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":1636401899309}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgLnJlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmVkICFpbXBvcnRhbnQgOwp9CgogIGEjYnRuTnVldm9SZWdpc3RybzpsaW5rLAogIGEjYnRuTnVldm9SZWdpc3Rybzpob3ZlciwKICBhI2J0bk51ZXZvUmVnaXN0cm86dmlzaXRlZCB7CiAgZm9udC13ZWlnaHQ6IG5vcm1hbCA7CiAgY29sb3I6IGxpZ2h0Ymx1ZSA7CiAgcGFkZGluZzogLjVlbSA7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAibA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/construccion/projects","sourcesContent":["<template>\r\n  <div>\r\n\r\n    <Navbar />\r\n    <NavbarSideBar />\r\n\r\n    <div class=\"content-wrapper\">\r\n\r\n      <!-- Content Header (Page header) -->\r\n      <div class=\"content-header\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-sm-6\">\r\n              <h1 class=\"m-0\">\r\n                Listado de Projects |\r\n                <small>\r\n                  <span class=\"right badge badge-secondary\">\r\n                      <a href=\"#\" id=\"btnNuevoRegistro\" data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">Nuevo</a>\r\n                  </span>\r\n                </small>\r\n              </h1>\r\n            </div><!-- /.col -->\r\n            <div class=\"col-sm-6\">\r\n              <ol class=\"breadcrumb float-sm-right\">\r\n                <li class=\"breadcrumb-item\"><router-link to=\"/Dashboard\">Dashboard</router-link></li>\r\n                <li class=\"breadcrumb-item active\">\r\n                  Projects\r\n                </li>\r\n              </ol>\r\n            </div><!-- /.col -->\r\n          </div><!-- /.row -->\r\n        </div><!-- /.container-fluid -->\r\n      </div>\r\n      <!-- /.content-header -->\r\n\r\n      <!-- Main content -->\r\n      <div class=\"content\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body table-responsive\">\r\n\r\n              <table id=\"projectsList\" class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Name</th>\r\n                  <th>Short Name</th>\r\n                  <th>Division</th>\r\n                  <th>Last Modified</th>\r\n                  <th>User Who Modified</th>\r\n                  <th></th>\r\n                  <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody id=\"projectsContent\"></tbody>\r\n\r\n                <tfoot>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Name</th>\r\n                  <th>Short Name</th>\r\n                  <th>Division</th>\r\n                  <th>Last Modified</th>\r\n                  <th>User Who Modified</th>\r\n                  <th></th>\r\n                  <th></th>\r\n                </tr>\r\n                </tfoot>\r\n              </table>\r\n\r\n            </div>\r\n          </div>\r\n        </div><!-- /.container-fluid -->\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n        id=\"nuevoProjects\"\r\n        class=\"modal fade bd-example-modal-lg\"\r\n        tabindex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\"\r\n        data-backdrop=\"static\"\r\n        data-keyboard=\"false\"\r\n    >\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Nuevo Proyecto</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" @click=\"cancelInsert\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n\r\n                <form>\r\n\r\n                  <form>\r\n                    <table class=\"table table-striped table-hover\">\r\n\r\n                      <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">Projects Name:</th>\r\n                        <td>\r\n                          <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              placeholder=\"Projects Name\"\r\n                              v-model=\"newData.projectsName\"\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <th scope=\"row\">Projects Short Name:</th>\r\n                        <td>\r\n                          <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              placeholder=\"Projects ShortName\"\r\n                              v-model=\"newData.projectsShortName\"\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <th scope=\"row\">Division assign to:</th>\r\n                        <td>\r\n                          <select\r\n                              name=\"\"\r\n                              id=\"\"\r\n                              class=\"form-control\"\r\n                              v-model=\"newData.divisionId\"\r\n                          >\r\n                            <option\r\n                                v-for = \"corp in divisiones.data\"\r\n                                :value = \"corp[ 0 ]\"\r\n                            >{{ corp[ 1 ] }}</option>\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n\r\n\r\n\r\n                      </tbody>\r\n                    </table>\r\n                  </form>\r\n\r\n                </form>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-success\" @click=\"saveNewData\">Save changes</button>\r\n            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" @click=\"cancelInsert\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Navbar from \"@/components/navbar/Navbar\" ;\r\nimport NavbarSideBar from \"@/components/navbar/NavbarSidebar\" ;\r\nimport requests from \"@/utils/requests\";\r\nimport errorCodes from \"@/utils/errorCodes\";\r\n\r\nexport default {\r\n  name: \"index\"\r\n\r\n  , components: {\r\n    Navbar\r\n    , NavbarSideBar\r\n  }\r\n\r\n  , data() {\r\n    return {\r\n      divisiones : {}\r\n\r\n      , newData : {\r\n        projectsName : null\r\n        , projectsShortName : null\r\n        , divisionId : 1\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  , methods: {\r\n\r\n    async firstDataLoad() {\r\n      // console.log( localStorage.getItem( \"accessToken\" ) ) ;\r\n      let notification ;\r\n\r\n      const response = await requests.get(\r\n          'projects/'\r\n      ) ;\r\n\r\n      if ( response.data === 200 || response.status === 200 ) {\r\n\r\n        let tbody = document.getElementById(\"projectsContent\" ) ;\r\n        let items = response.data.data ;\r\n\r\n        for ( let i = 0 ; i <= items.length-1 ; i++ ) {\r\n\r\n          const tr = document.createElement(\"tr\" ) ;\r\n\r\n          for ( let y = 0 ; y <= items[ i ].length-1 ; y++ ) {\r\n            const td = document.createElement(\"td\" ) ;\r\n            td.innerHTML = items[ i ][ y ] ;\r\n            tr.appendChild( td ) ;\r\n          }\r\n\r\n          tbody.appendChild( tr ) ;\r\n        }\r\n\r\n        // $ ( '#requisicionesList' ).DataTable() ;\r\n        let x=1;\r\n\r\n        $ ( '#projectsList' ).DataTable( {\r\n          \"processing\": true,\r\n          \"data\": response.data.data\r\n          , \"columns\": [\r\n            {\r\n              data : 0\r\n              , render: function() {\r\n                return x++ ;\r\n              }\r\n            }\r\n\r\n            , {\r\n              data : 1\r\n              , render: function( data ) {\r\n                return data ;\r\n              }\r\n            }\r\n\r\n            , {\r\n              data : 2\r\n              , render: function( data ) {\r\n                return data ;\r\n              }\r\n            }\r\n\r\n            , {\r\n              data : 3\r\n              , render: function( data ) {\r\n                return data[ 1 ] ;\r\n              }\r\n            }\r\n\r\n            , {\r\n              data : 4\r\n              , render: function( data ) {\r\n                return data ;\r\n              }\r\n            }\r\n\r\n            , {\r\n              data : 5\r\n              , render: function( data ) {\r\n                return data[0] ? data[0].username : \"\" ;\r\n              }\r\n            }\r\n\r\n            , {\r\n              data : 6\r\n              , render: function( data ) {\r\n                let cClass, cIcon ;\r\n                if ( data[ 0 ].id === 2 ) {\r\n                  cClass = 'stDeactivated' ;\r\n                  cIcon = '<i class=\"fas fa-ban\"></i>' ;\r\n                } else {\r\n                  cClass = 'stActive' ;\r\n                  cIcon = '<i class=\"fas fa-check\"></i>' ;\r\n                }\r\n\r\n                let html = `<span class=\"${cClass}\" title=\"${data[ 0 ].stName}\">${cIcon}</span>` ;\r\n\r\n                return data[ 0 ] ? html : \"\" ;\r\n              }\r\n            }\r\n\r\n            , {\r\n              data : 7\r\n              , render: function( data ) {\r\n                return `\r\n                                    <a href='/Projects/Detalle/${data}' @click=\"x(${data})\" class=\"details\" >\r\n                                        <i class='fas fa-folder-open'></i>\r\n                                    </a>\r\n                                ` ;\r\n              }\r\n            }\r\n\r\n\r\n\r\n          ]\r\n          , \"order\": [ [ 0 , 'asc' ] ]\r\n        } ) ;\r\n\r\n      } else {\r\n\r\n        // console.log(\"RESPONSE\",response.split(parseInt(response))) ;\r\n\r\n        let st ;\r\n        if ( response.data != typeof number ) st = 401 ;\r\n        else st = response.status | response.data ;\r\n\r\n        notification = errorCodes.get( st ) ;\r\n        // console.log(notification)\r\n        this.$notify({\r\n          group: 'foo'\r\n          , title: `<h5>Error Code: ${notification.code}</h5>`\r\n          , text: `<h6>${notification.message}</h6>`\r\n          , type: `${notification.type}`\r\n          , duration: -1\r\n        } ) ;\r\n        if ( st === 401 ) await this.$router.push( '/logout' ) ;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    , async saveNewData() {\r\n      let notification ;\r\n\r\n      if (\r\n          ! this.newData.projectsName\r\n          || this.newData.projectsName.trim() === ''\r\n\r\n          || ! this.newData.projectsShortName\r\n          || this.newData.projectsShortName.trim() === ''\r\n\r\n          || ! this.newData.divisionId\r\n          || this.newData.divisionId <= 0\r\n      ) {\r\n        notification = errorCodes.get( 400 ) ;\r\n\r\n        this.$notify({\r\n          group: 'foo'\r\n          , title: `<h4>Error Code: ${ notification.code }</h4>`\r\n          , text: `<h5>${ notification.message }</h5>\r\n                            <br />\r\n                            <h6>Fields should not left blank.</h6>\r\n                        `\r\n          , type: `${ notification.type }`\r\n          , duration: 5000\r\n        } ) ;\r\n      } else {\r\n\r\n        const data = {\r\n          \"projectsName\" : this.newData.projectsName\r\n          , \"projectsShortName\" : this.newData.projectsShortName\r\n          , \"divisionId\" : this.newData.divisionId\r\n        }\r\n        // console.log( \"data:\" , data ) ;\r\n        //\r\n        // console.log( \"headers: \" , this.headers ) ;\r\n        // console.log( \"newData: \" , this.newData ) ;\r\n\r\n        const response = await requests.post(\r\n            'projects/new'\r\n            , data\r\n        ) ;\r\n\r\n        // console.log( \"response: \" , response ) ;\r\n\r\n        if ( response.status === 200 ) {\r\n\r\n          notification = errorCodes.get( response.status ) ;\r\n          // console.log(notification)\r\n          this.$notify({\r\n            group: 'foo'\r\n            , title: `<h5>Message Code: ${notification.code}</h5>`\r\n            , text: `<h6>${notification.message}</h6>`\r\n            , type: `${notification.type}`\r\n            , duration: 10000\r\n          } ) ;\r\n          if ( response.status === 401 ) await this.$router.push( '/logout' ) ;\r\n          window.location.reload() ;\r\n\r\n        } else {\r\n          let st ;\r\n          if ( response.data !== typeof number ) st = 401 ;\r\n          else st = response.status | response.data ;\r\n\r\n          notification = errorCodes.get( st ) ;\r\n          // console.log(notification)\r\n          this.$notify({\r\n            group: 'foo'\r\n            , title: `<h5>Error Code: ${notification.code}</h5>`\r\n            , text: `<h6>${notification.message}</h6>`\r\n            , type: `${notification.type}`\r\n            , duration: -1\r\n          } ) ;\r\n          if ( st === 401 ) await this.$router.push( '/logout' ) ;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    , cancelInsert() {\r\n      window.location.reload() ;\r\n    }\r\n\r\n    , async getDivisiones() {\r\n      const divisiones = await requests.get(\r\n          'divisiones/all'\r\n      ) ;\r\n\r\n      this.divisiones = divisiones.data ;\r\n    }\r\n\r\n  }\r\n\r\n  , created() {\r\n    this.firstDataLoad() ;\r\n    this.getDivisiones() ;\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .red {\r\n  background-color: red !important ;\r\n}\r\n\r\n  a#btnNuevoRegistro:link,\r\n  a#btnNuevoRegistro:hover,\r\n  a#btnNuevoRegistro:visited {\r\n  font-weight: normal ;\r\n  color: lightblue ;\r\n  padding: .5em ;\r\n}\r\n</style>"]}]}